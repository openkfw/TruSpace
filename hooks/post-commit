#!/bin/bash

echo "Running post-commit hook"

COMMIT_HASH=$(git rev-parse HEAD)
SHORT_HASH=$(git rev-parse --short HEAD)
COMMIT_DATE=$(git show -s --format=%ci HEAD)

# Check if version files have changed to avoid infinite loops
if git show --name-only HEAD | grep -q "version.ts"; then
    echo "Version files already updated in this commit, skipping"
    exit 0
fi

cat > frontend/src/version.ts << EOF
// This file is auto-generated by the post-commit hook
// DO NOT EDIT MANUALLY
export const COMMIT_HASH = '$COMMIT_HASH';
export const SHORT_COMMIT_HASH = '$SHORT_HASH';
export const COMMIT_DATE = '$COMMIT_DATE';

export interface CommitInfo {
  commitHash: string;
  shortCommitHash: string;
  commitDate: string;
}

export const commitInfo: CommitInfo = {
  commitHash: COMMIT_HASH,
  shortCommitHash: SHORT_COMMIT_HASH,
  commitDate: COMMIT_DATE,
};
EOF

cat > backend/src/version.ts << EOF
// This file is auto-generated by the post-commit hook
// DO NOT EDIT MANUALLY
export const COMMIT_HASH = '$COMMIT_HASH';
export const SHORT_COMMIT_HASH = '$SHORT_HASH';
export const COMMIT_DATE = '$COMMIT_DATE';

export interface CommitInfo {
  commitHash: string;
  shortCommitHash: string;
  commitDate: string;
}

export const commitInfo: CommitInfo = {
  commitHash: COMMIT_HASH,
  shortCommitHash: SHORT_COMMIT_HASH,
  commitDate: COMMIT_DATE,
};
EOF

# Create a separate commit for version files
git add frontend/src/version.ts backend/src/version.ts
git commit -m "chore: update version files with commit hash $SHORT_HASH"

echo "Created follow-up commit with version files"
exit 0