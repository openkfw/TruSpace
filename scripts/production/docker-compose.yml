services:
  backend:
    build:
      context: ../../backend
      target: builder
    restart: on-failure
    volumes:
      - ../../backend/src:/app/src
      - ../../backend/index.ts:/app/index.ts
      - ../../backend/nodemon.json:/app/nodemon.json
      - ../../backend/prompts:/app/prompts
      - ../../volumes/db:/app/data
    environment:
      PORT: ${API_PORT}
      IPFS_CLUSTER_HOST: ${IPFS_CLUSTER_HOST}
      IPFS_GATEWAY_HOST: ${IPFS_GATEWAY_HOST}
      IPFS_PINSVC_HOST: ${IPFS_PINSVC_HOST}
      OLLAMA_MODEL: ${OLLAMA_MODEL}
      OPENWEBUI_HOST: ${OPENWEBUI_HOST}
      WEBUI_SECRET_KEY: ${WEBUI_SECRET_KEY}
      ADMIN_USER_EMAIL: ${ADMIN_USER_EMAIL}
      ADMIN_USER_PASSWORD: ${ADMIN_USER_PASSWORD}
      AUTO_DOWNLOAD: ${AUTO_DOWNLOAD}
      DISABLE_ALL_AI_FUNCTIONALITY: ${DISABLE_ALL_AI_FUNCTIONALITY}
      DATABASE_PATH: /app/data/truspace.db
    ports:
      - ${API_PORT}:${API_PORT}
    command: npm start

  frontend:
    build:
      context: ../../frontend
      dockerfile: Dockerfile
    restart: on-failure
    volumes:
      - ../../frontend/src:/app/src
      - ../../frontend/public:/app/public
      - ../../frontend/package.json:/app/package.json
      - ../../frontend/package-lock.json:/app/package-lock.json
    environment:
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL}
    ports:
      - ${FRONTEND_PORT}:${FRONTEND_PORT}
    command: npm start

  ##################################################################################
  ## Cluster PEER 0 ################################################################
  ##################################################################################

  ipfs0:
    container_name: ipfs0
    image: ipfs/kubo:release
    restart: unless-stopped
    user: ${LUID}:${LGID}
    ports:
      - "${SWARM_PORT}:${SWARM_PORT}" # ipfs swarm - expose if needed/wanted
      - "${IPFS_API_PORT}:${IPFS_API_PORT}" # ipfs api - expose if needed/wanted
      - "${IPFS_GATEWAY_PORT}:${IPFS_GATEWAY_PORT}" # ipfs gateway - expose if needed/wanted
    volumes:
      - ../../volumes/ipfs0:/data/ipfs

  cluster0:
    container_name: cluster0
    image: ipfs/ipfs-cluster:latest
    restart: unless-stopped
    user: ${LUID}:${LGID}
    depends_on:
      - ipfs0
    environment:
      CLUSTER_PEERNAME: ${CLUSTER_PEERNAME_0}
      CLUSTER_SECRET: ${CLUSTER_SECRET}
      CLUSTER_IPFSHTTP_NODEMULTIADDRESS: ${CLUSTER_IPFSHTTP_NODEMULTIADDRESS_0}
      CLUSTER_CRDT_TRUSTEDPEERS: ${CLUSTER_CRDT_TRUSTEDPEERS_0} # Trust all peers in Cluster
      CLUSTER_RESTAPI_HTTPLISTENMULTIADDRESS: ${CLUSTER_RESTAPI_HTTPLISTENMULTIADDRESS} # Expose API
      CLUSTER_PINSVCAPI_HTTPLISTENMULTIADDRESS: ${CLUSTER_PINSVCAPI_HTTPLISTENMULTIADDRESS} # Exposes Pinning Service API
      CLUSTER_MONITORPINGINTERVAL: ${CLUSTER_MONITORPINGINTERVAL} # Speed up peer discovery
    ports:
      # Open API port (allows ipfs-cluster-ctl usage on host)
      - "${OPEN_API_PORT}:${OPEN_API_PORT}"
      # IPFS pinning service api
      - "${PINNING_SERVICE_PORT}:${PINNING_SERVICE_PORT}"
      # The cluster swarm port would need  to be exposed if this container
      # was to connect to cluster peers on other hosts.
      # But this is just a testing cluster.
      # - "9095:9095" # Cluster IPFS Proxy endpoint
      - "${CLUSTER_SWARM_PORT}:${CLUSTER_SWARM_PORT}" # Cluster swarm endpoint
    volumes:
      - ../../volumes/cluster0:/data/ipfs-cluster

  ##################################################################################
  ## Cluster PEER 1 ################################################################
  ##################################################################################

  # ipfs1:
  #   container_name: ipfs1
  #   image: ipfs/kubo:release
  #   restart: unless-stopped
  #   user: ${LUID}:${LGID}
  #   volumes:
  #     - ./volumes/ipfs1:/data/ipfs

  # cluster1:
  #   container_name: cluster1
  #   image: ipfs/ipfs-cluster:latest
  #   restart: unless-stopped
  #   user: ${LUID}:${LGID}
  #   depends_on:
  #     - ipfs1
  #   environment:
  #     CLUSTER_PEERNAME: ${CLUSTER_PEERNAME_1}
  #     CLUSTER_SECRET: ${CLUSTER_SECRET}
  #     CLUSTER_IPFSHTTP_NODEMULTIADDRESS: ${CLUSTER_IPFSHTTP_NODEMULTIADDRESS_1}
  #     CLUSTER_CRDT_TRUSTEDPEERS: ${CLUSTER_CRDT_TRUSTEDPEERS_1}
  #     CLUSTER_RESTAPI_HTTPLISTENMULTIADDRESS: ${CLUSTER_RESTAPI_HTTPLISTENMULTIADDRESS} # Expose API
  #     CLUSTER_PINSVCAPI_HTTPLISTENMULTIADDRESS: ${CLUSTER_PINSVCAPI_HTTPLISTENMULTIADDRESS} # Exposes Pinning Service API
  #     CLUSTER_MONITORPINGINTERVAL: ${CLUSTER_MONITORPINGINTERVAL} # Speed up peer discovery
  #   ports:
  #     - "${OPEN_API_PORT_1}:${OPEN_API_PORT}"
  #     - "${PINNING_SERVICE_PORT_1}:${PINNING_SERVICE_PORT}"
  #   volumes:
  #     - ./volumes/cluster1:/data/ipfs-cluster
